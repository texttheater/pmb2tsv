[]
prelude =
	import multiprocessing
	import re

### DATA EXTRACTION ############################################################

# Extract data from the PMB, one file per language, part, and annotation status.

[out/pmb-3.0.0-%{lang}-%{status}-%{part}.parse.tags]
cond = %{lang in ('en', 'de', 'it', 'nl') and re.match(r'p\d\d$', part) and status in ('bronze', 'silver', 'gold')}
dep.cac_renumber = cac_renumber.py
deps = blocks.py
jobs = %{multiprocessing.cpu_count()}
recipe =
	set -e
	set -o pipefail
	mkdir -p out
	# Exclude 67/0365, en.drs.clf and en.parse.tags don't match
	find data/pmb-3.0.0/data/%{lang}/%{status} -maxdepth 1 -name %{part} | parallel find {} -name %{lang}.parse.tags ! -path data/pmb-3.0.0/data/en/silver/p67/d0365/en.parse.tags | sort | parallel -k tail +6 | python3 %{cac_renumber} > %{target}


[out/pmb-3.0.0-%{lang}-%{status}-%{part}.drs.clf]
cond = %{lang in ('en', 'de', 'it', 'nl') and re.match(r'p\d\d$', part) and status in ('bronze', 'silver', 'gold')}
jobs = %{multiprocessing.cpu_count()}
recipe =
	set -e
	set -o pipefail
	mkdir -p out
	# Exclude 67/0365, en.drs.clf and en.parse.tags don't match
	find data/pmb-3.0.0/data/%{lang}/%{status} -maxdepth 1 -name %{part} | parallel find {} -name %{lang}.drs.clf ! -path data/pmb-3.0.0/data/en/silver/p67/d0365/en.drs.clf | sort | parallel -k 'cat {}; echo' > %{target}

### TOKEN NUMBERS ##############################################################

[%{name}.toknum]
dep.parse = %{name}.parse.tags
dep.parse2toknum = parse2toknum.py
deps = cac.py
recipe = python3 %{parse2toknum} < %{parse} > %{target}

### TOKENS ####################################################################

[%{name}.token]
dep.parse = %{name}.parse.tags
dep.parse2token = parse2token.py
deps = cac.py
recipe = python3 %{parse2token} < %{parse} > %{target}

### WORDNET SENSES ############################################################

[%{name}.wordnet]
dep.parse = %{name}.parse.tags
dep.parse2wordnet = parse2wordnet.py
deps = cac.py
recipe = python3 %{parse2wordnet} < %{parse} > %{target}

### DEPENDENCIES ##############################################################

[%{name}.pmbdep]
dep.parse = %{name}.parse.tags
dep.parse2dep = parse2dep.pl
deps = cac.pl cat.pl slashes.pl util.pl anno.pl
recipe = swipl -l %{parse2dep} -g main -- --no-adp --no-cop --no-coord %{parse} > %{target}

### FRAGMENTS #################################################################

[%{name}.frag]
dep.drs = %{name}.drs.clf
dep.token = %{name}.token
dep.drs2frag = drs2frag.py
recipe = python3 %{drs2frag} %{drs} %{token} > %{target}

### TSV OUTPUT ################################################################

# Where it all comes together.

[%{name}.tsv]
dep.blocks = blocks.py
dep.toknum = %{name}.toknum
dep.token = %{name}.token
dep.wordnet = %{name}.wordnet
dep.dep = %{name}.pmbdep
dep.frag = %{name}.frag
recipe =
	set -e
	set -o pipefail
	python3 %{blocks} paste -e drop %{toknum} %{token} %{wordnet} %{dep} %{frag} > %{target}
